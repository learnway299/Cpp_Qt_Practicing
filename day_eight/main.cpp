#include "KMatrix.h"
#include <iostream>
using namespace std;
int main() {
	double d1[9] = { 10.0, 2.0, 3.4, 17.0, 2.1, 3.2, 4.3, 5.1, 8.3 };
	double* d2;
	d2 = d1;
	KMatrix<double> k1(3, 3, d2);
	//std::cout << "k1 is empty? " << k1.isempty() << std::endl;
	std::cout << "k1: " << std::endl;
	k1.print();
	KMatrix<int> k2(4, 4);
	//std::cout << std::endl << "k2 is empty? " << k2.isempty() << std::endl;
	std::cout << "k2.init(4,4,2): " << std::endl;
	k2.init(4, 4, 2);
	std::cout << std::endl << std::endl << "k2: " << std::endl;
	k2.print();
	int d3[16] = { 2,3,1,2,4,5,6,12,32,43,12,35,75,8,47,87 };
	int* d4;
	d4 = d3;
	KMatrix<int> k3(4, 4, d3);
	std::cout << "k3 行数 " << k3.getRows() << std::endl;
	std::cout << "k3 列数 " << k3.getCols() << std::endl;
	std::cout << "k3: " << std::endl;
	k3.print();
	KMatrix<int> kx(4, 4);
	kx = k3 + k2;
	std::cout << std::endl << "k3 + k2: " << std::endl;
	kx.print();
	KMatrix<int> k4(4, 4);
	k4 = k3 * k2;
	std::cout << std::endl << "k4 = k3 * k2: " << std::endl;
	k4.print();
	std::cout << std::endl << "k4 == k3? " << (k4 == k3) << std::endl;
	KMatrix<int> k5(4, 4);
	k5 = k2 + 1;
	std::cout << "k5 = k2+1: " << std::endl;
	k5.print();
	KMatrix<int> k6(4, 4);
	k6 = k2 - 1;
	std::cout << std::endl << "k6 = k2-1: " << std::endl;
	k6.print();
	KMatrix<int> k7(4, 4);
	k7 = k3 - k6;
	std::cout << std::endl << "k7 = k3 - k6: " << std::endl;
	k7.print();
	int x, y;
	std::cout << std::endl << std::endl << "输入x、y获取k7数据 " << std::endl;
	std::cin >> x >> y;
	std::cout << "k7.getData(" << x << "," << y << ") : " << k7.getData(x, y) << std::endl;
	KMatrix<int> k8(4, 4);
	k8 = k7.transpose();
	std::cout << "k7的转置矩阵: " << std::endl;
	k8.print();
	std::cout << std::endl << "k8 . k4: " << k8.dotMul(k4) << std::endl;
	std::cout << "k4 行数 " << k4.getRows() << "请输入删除的行数" << std::endl;
	std::cin >> x;
	std::cout << "k4删除" << x << "行后为：" << std::endl;
	k4.erase_row(x);
	k4.print();
	std::cout << "k5 列数 " << k4.getCols() << "请输入删除的列数" << std::endl;
	std::cin >> y;
	std::cout << "k5删除" << y << "行后为：" << std::endl;
	k5.erase_col(y);
	k5.print();
	std::cout << std::endl << "k1: " << std::endl;
	k1.print();
	std::cout << std::endl << "开始对k1的遍历 " << std::endl;
	k1.myiterator();
	std::cout << "k1: " << std::endl;
	k1.print();
	return 0;
}